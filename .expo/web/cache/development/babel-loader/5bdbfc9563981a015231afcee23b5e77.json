{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Audio } from \"expo-av\";\nvar soundObject = new Audio.Sound();\nexport function playSound(soundName) {\n  var filePath;\n  return _regeneratorRuntime.async(function playSound$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(soundObject.unloadAsync());\n\n        case 2:\n          filePath = _context.sent;\n          _context.prev = 3;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(soundObject.loadAsync(require(\"../../assets/bark.mp3\")));\n\n        case 6:\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(soundObject.playAsync());\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](3);\n          _context.next = 14;\n          return _regeneratorRuntime.awrap(soundObject.playAsync());\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[3, 10]], Promise);\n}","map":{"version":3,"sources":["C:/Users/josh2/Documents/React_Native_Projects/Soundboard/src/apis/audio_api.js"],"names":["Audio","soundObject","Sound","playSound","soundName","unloadAsync","filePath","loadAsync","require","playAsync"],"mappings":";AAAA,SAASA,KAAT,QAAsB,SAAtB;AAEA,IAAMC,WAAW,GAAG,IAAID,KAAK,CAACE,KAAV,EAApB;AAEA,OAAO,SAAeC,SAAf,CAAyBC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAGCH,WAAW,CAACI,WAAZ,EAHD;;AAAA;AACCC,UAAAA,QADD;AAAA;AAAA;AAAA,2CAKOL,WAAW,CAACM,SAAZ,CAAsBC,OAAO,yBAA7B,CALP;;AAAA;AAAA;AAAA,2CAMOP,WAAW,CAACQ,SAAZ,EANP;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,2CAUOR,WAAW,CAACQ,SAAZ,EAVP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { Audio } from \"expo-av\";\r\n\r\nconst soundObject = new Audio.Sound();\r\n\r\nexport async function playSound(soundName) {\r\n    let filePath = \r\n\r\n  await soundObject.unloadAsync();\r\n      try {\r\n        await soundObject.loadAsync(require(\"../../assets/bark.mp3\"));\r\n        await soundObject.playAsync();\r\n        // Your sound is playing!\r\n      } catch (error) {\r\n        // An error occurred!\r\n        await soundObject.playAsync();\r\n      }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}