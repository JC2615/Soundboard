{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\josh2\\\\Documents\\\\React_Native_Projects\\\\Soundboard\\\\node_modules\\\\react-native-sortable-gridview\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport isEqual from 'react-fast-compare';\nvar numPerRow = 3;\nvar aspectRatio = 1;\nvar gapWidth = 16;\nvar paddingVertical = 16;\nvar paddingHorizontal = 16;\nvar sensitivity = 150;\nvar selectAnimation = 'scale';\nvar selectStyle = {\n  shadowColor: '#000',\n  shadowOffset: {\n    width: 0,\n    height: 0\n  },\n  shadowOpacity: 0.25,\n  shadowRadius: 3.84,\n  elevation: 5\n};\n\nvar SortableGridview = function (_Component) {\n  _inherits(SortableGridview, _Component);\n\n  var _super = _createSuper(SortableGridview);\n\n  function SortableGridview() {\n    var _this;\n\n    _classCallCheck(this, SortableGridview);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      useScrollView: _this.props.useScrollView || false,\n      scrollable: _this.props.useScrollView || false,\n      containerOnMount: false,\n      contentStyle: {},\n      selectIndex: null,\n      perWidth: 0,\n      perHeight: 0,\n      layoutWidth: 0,\n      data: _this.props.data || [],\n      lockData: _this.props.lockData || [],\n      numPerRow: _this.props.numPerRow || numPerRow,\n      aspectRatio: _this.props.aspectRatio || aspectRatio,\n      gapWidth: _this.props.gapWidth || gapWidth,\n      paddingTop: _this.props.paddingTop || paddingVertical,\n      paddingBottom: _this.props.paddingBottom || paddingVertical,\n      paddingLeft: _this.props.paddingLeft || paddingHorizontal,\n      paddingRight: _this.props.paddingRight || paddingHorizontal,\n      selectStyle: _this.props.selectStyle || selectStyle,\n      sensitivity: _this.props.sensitivity || sensitivity,\n      selectAnimation: _this.props.selectAnimation || selectAnimation,\n      customAnimation: _this.props.customAnimation ? _objectSpread({\n        startTimingOption: {\n          toValue: 1,\n          duration: 300,\n          easing: Easing.ease\n        },\n        endTimingOption: {\n          toValue: 0,\n          duration: 150\n        }\n      }, _this.props.customAnimation) : {\n        startTimingOption: {\n          toValue: 1,\n          duration: 300,\n          easing: Easing.ease\n        },\n        endTimingOption: {\n          toValue: 0,\n          duration: 150\n        }\n      }\n    };\n\n    _this.setTimer = function (dx, dy) {\n      _this.timer = setTimeout(function () {\n        _this._caluIndex(dx, dy);\n      }, _this.state.sensitivity);\n    };\n\n    _this.clearTimer = function () {\n      clearTimeout(_this.timer);\n    };\n\n    _this.onActiveBlockIsSet = function (fn) {\n      return function (evt, gestureState) {\n        _this.currentAnchor && fn(evt, gestureState);\n      };\n    };\n\n    _this.onStartDrag = function (evt, gestureState) {\n      _this.tempX = _this.positions[_this.positionIndex].x;\n      _this.tempY = _this.positions[_this.positionIndex].y;\n    };\n\n    _this.onMoveBlock = function (evt, gestureState) {\n      var dx = gestureState.dx,\n          dy = gestureState.dy,\n          vx = gestureState.vx,\n          vy = gestureState.vy;\n\n      _this[_this.currentAnchor].setValue({\n        x: dx + _this.tempX,\n        y: dy + _this.tempY\n      });\n\n      if (Math.abs(vx) < 0.2 && Math.abs(vy) < 0.2) {\n        return;\n      }\n\n      _this._caluIndex(dx + _this.tempX, dy + _this.tempY);\n    };\n\n    _this.onReleaseBlock = function (evt, gestureState) {\n      Animated.parallel([Animated.timing(_this[_this.currentAnchor], {\n        toValue: {\n          x: _this.positions[_this.positionIndex].x,\n          y: _this.positions[_this.positionIndex].y\n        },\n        duration: 150\n      }), Animated.timing(_this[\"selectAnimation\" + _this.currentAnchorKey], _this.state.customAnimation.endTimingOption)]).start(function (data) {\n        _this.setState({\n          data: _this.data,\n          selectIndex: null,\n          scrollable: _this.state.useScrollView || false\n        }, function () {\n          _this.props.onDragRelease && _this.props.onDragRelease(_this.data);\n          _this.positionIndex = null;\n          _this.currentAnchor = null;\n          _this.caluing = false;\n          _this.panCapture = false;\n        });\n      });\n    };\n\n    _this._caluIndex = function (x, y) {\n      if (_this.caluing) {\n        return;\n      }\n\n      _this.caluing = true;\n      _this.data = _this.data || _toConsumableArray(_this.state.data);\n      var centerX = x + _this.state.perWidth / 2;\n      var centerY = y + _this.state.perHeight / 2;\n      var columNum = Math.floor(centerX / (_this.state.perWidth + _this.state.gapWidth));\n      var rowNum = Math.floor(centerY / (_this.state.perHeight + _this.state.gapWidth));\n\n      if (rowNum > _this.state.rowCount) {\n        rowNum = _this.state.rowCount;\n      } else if (rowNum < 0) {\n        rowNum = 0;\n      }\n\n      if (columNum > _this.state.numPerRow) {\n        columNum = _this.state.numPerRow;\n      } else if (columNum < 0) {\n        columNum = 0;\n      }\n\n      var index = columNum + rowNum * _this.state.numPerRow;\n      index = index > _this.state.data.length - 1 ? _this.state.data.length - 1 : index;\n\n      if (_this.positionIndex === index) {\n        _this.caluing = false;\n        return;\n      }\n\n      var newIndex;\n      var rangeMax;\n      var rangeMin;\n\n      if (index === _this.positionIndex) {\n        newIndex = index;\n        rangeMax = index;\n        rangeMin = index;\n      } else if (index > _this.positionIndex) {\n        var moveItem = _this.data.splice(_this.positionIndex, 1);\n\n        var animate = _this.animateArray.splice(_this.positionIndex, 1)[0];\n\n        _this.data.splice(index, 0, moveItem[0]);\n\n        _this.animateArray.splice(index, 0, animate);\n\n        newIndex = index;\n        rangeMax = index;\n        rangeMin = _this.positionIndex;\n      } else if (index < _this.positionIndex) {\n        var _moveItem = _this.data.splice(_this.positionIndex, 1);\n\n        var _animate = _this.animateArray.splice(_this.positionIndex, 1)[0];\n\n        _this.data.splice(index, 0, _moveItem[0]);\n\n        _this.animateArray.splice(index, 0, _animate);\n\n        newIndex = index;\n        rangeMax = _this.positionIndex;\n        rangeMin = index;\n      }\n\n      var parallel = [];\n\n      _this.animateArray.map(function (item, index) {\n        if (index > rangeMax || index < rangeMin) {\n          return;\n        }\n\n        if (newIndex === index || !_this.positions[index]) {\n          return;\n        }\n\n        parallel.push(Animated.timing(item, {\n          toValue: {\n            x: _this.positions[index].x,\n            y: _this.positions[index].y\n          },\n          duration: 150\n        }));\n      });\n\n      _this.positionIndex = index;\n      Animated.parallel(parallel).start(function () {\n        _this.caluing = false;\n      });\n    };\n\n    _this._setContentStyle = function (width) {\n      var _this$state = _this.state,\n          _this$state$data = _this$state.data,\n          data = _this$state$data === void 0 ? [] : _this$state$data,\n          _this$state$lockData = _this$state.lockData,\n          lockData = _this$state$lockData === void 0 ? [] : _this$state$lockData,\n          numPerRow = _this$state.numPerRow,\n          gapWidth = _this$state.gapWidth,\n          aspectRatio = _this$state.aspectRatio,\n          paddingLeft = _this$state.paddingLeft,\n          paddingRight = _this$state.paddingRight,\n          paddingTop = _this$state.paddingTop,\n          paddingBottom = _this$state.paddingBottom;\n      var allData = [].concat(_toConsumableArray(data), _toConsumableArray(lockData));\n      var rowCount = Math.ceil(allData.length / numPerRow);\n      var perWidth = (width - (numPerRow - 1) * gapWidth - (paddingLeft + paddingRight)) / numPerRow;\n      var perHeight = perWidth * aspectRatio;\n      var contentHeight = perHeight * rowCount + (rowCount - 1) * gapWidth;\n\n      if (_this.positions.length !== allData.length) {\n        _this.positions = [];\n        allData.map(function (item, index) {\n          var row = Math.floor(index / numPerRow);\n          var column = index % numPerRow;\n          _this.positions[index] = {\n            x: paddingLeft + perWidth * column + column * gapWidth,\n            y: paddingTop + perHeight * row + row * gapWidth\n          };\n        });\n      }\n\n      _this.setState({\n        containerOnMount: true,\n        perWidth: perWidth,\n        perHeight: perHeight,\n        layoutWidth: width,\n        rowCount: rowCount - 1,\n        contentStyle: {\n          height: contentHeight + (paddingTop + paddingBottom),\n          width: '100%',\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          zIndex: 2,\n          elevation: 2,\n          position: 'relative'\n        }\n      });\n    };\n\n    _this._getAnimation = function (key) {\n      if (_this.state.selectAnimation === 'none') {\n        return {};\n      }\n\n      if (!_this[\"selectAnimation\" + key]) {\n        _this[\"selectAnimation\" + key] = new Animated.Value(0);\n      }\n\n      if (_this.state.customAnimation && _this.state.customAnimation.style) {\n        return _this.state.customAnimation.style(_this[\"selectAnimation\" + key]);\n      }\n\n      if (_this.state.selectAnimation === 'scale') {\n        var onSelectScaleAnimation = {};\n\n        var scale = _this[\"selectAnimation\" + key].interpolate({\n          inputRange: [0, .6, 1],\n          outputRange: [1, 1.1, 1.07]\n        });\n\n        onSelectScaleAnimation = {\n          transform: [{\n            scale: scale\n          }]\n        };\n        return onSelectScaleAnimation;\n      }\n\n      if (_this.state.selectAnimation === 'shake') {\n        var onSelectShakeAnimation = {};\n\n        var rotate = _this[\"selectAnimation\" + key].interpolate({\n          inputRange: [0, .25, .5, .75, 1],\n          outputRange: ['0deg', '-5deg', '5deg', '-5deg', '0deg']\n        });\n\n        onSelectShakeAnimation = {\n          transform: [{\n            rotateZ: rotate\n          }]\n        };\n        return onSelectShakeAnimation;\n      }\n    };\n\n    _this._onLongPressItems = function (key, index) {\n      return function () {\n        _this.setState({\n          selectIndex: index,\n          scrollable: false\n        });\n\n        _this.positionIndex = index;\n        _this.currentAnchor = \"moveAnimate\" + key;\n        _this.currentAnchorKey = key;\n        _this.props.onDragStart && _this.props.onDragStart(false);\n        _this.panCapture = true;\n        Animated.timing(_this[\"selectAnimation\" + _this.currentAnchorKey], _this.state.customAnimation.startTimingOption).start();\n      };\n    };\n\n    _this._containerOnLayout = function (_ref) {\n      var nativeEvent = _ref.nativeEvent;\n\n      _this._setContentStyle(nativeEvent.layout.width);\n    };\n\n    return _this;\n  }\n\n  _createClass(SortableGridview, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      this.data = _toConsumableArray(this.state.data);\n      this.currentAnchor;\n      this.currentAnchorAnimation;\n      this.positions = [];\n      this.animateArray = [];\n      this.panCapture = false;\n      this.panResponder = PanResponder.create({\n        onStartShouldSetPanResponder: function onStartShouldSetPanResponder(evt, gestureState) {\n          return true;\n        },\n        onStartShouldSetPanResponderCapture: function onStartShouldSetPanResponderCapture(evt, gestureState) {\n          return false;\n        },\n        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(evt, gestureState) {\n          return _this2.panCapture;\n        },\n        onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture(evt, gestureState) {\n          return _this2.panCapture;\n        },\n        onShouldBlockNativeResponder: function onShouldBlockNativeResponder(evt, gestureState) {\n          return false;\n        },\n        onPanResponderTerminationRequest: function onPanResponderTerminationRequest(evt, gestureState) {\n          return false;\n        },\n        onPanResponderGrant: this.onActiveBlockIsSet(this.onStartDrag),\n        onPanResponderMove: this.onActiveBlockIsSet(this.onMoveBlock),\n        onPanResponderRelease: this.onActiveBlockIsSet(this.onReleaseBlock)\n      });\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this3 = this;\n\n      if (!isEqual(this.props.data, nextProps.data) || nextProps.numPerRow !== this.props.numPerRow || nextProps.aspectRatio !== this.props.aspectRatio || nextProps.gapWidth !== this.props.gapWidth || nextProps.paddingTop !== this.props.paddingTop || nextProps.paddingBottom !== this.props.paddingBottom || nextProps.paddingLeft !== this.props.paddingLeft || nextProps.paddingRight !== this.props.paddingRight || nextProps.selectStyle !== this.props.selectStyle || nextProps.sensitivity !== this.props.sensitivity) {\n        var preDataLength = this.props.data.length;\n\n        var nextData = _toConsumableArray(nextProps.data);\n\n        var data = [];\n\n        if (preDataLength > nextData.length) {\n          this.moveAnimate = true;\n          data = nextData;\n        } else {\n          nextData.splice(0, preDataLength);\n          data = [].concat(_toConsumableArray(this.state.data), _toConsumableArray(nextData));\n        }\n\n        this.data = data;\n        this.setState(_objectSpread(_objectSpread({}, this.state), {}, {\n          data: data,\n          lockData: nextProps.lockData || this.state.lockData,\n          numPerRow: nextProps.numPerRow || this.state.numPerRow,\n          aspectRatio: nextProps.aspectRatio || this.state.aspectRatio,\n          gapWidth: nextProps.gapWidth || this.state.gapWidth,\n          paddingTop: nextProps.paddingTop || this.state.paddingTop,\n          paddingBottom: nextProps.paddingBottom || this.state.paddingBottom,\n          paddingLeft: nextProps.paddingLeft || this.state.paddingLeft,\n          paddingRight: nextProps.paddingRight || this.state.paddingRight,\n          selectStyle: nextProps.selectStyle || this.state.selectStyle,\n          sensitivity: nextProps.sensitivity || this.state.sensitivity\n        }), function () {\n          _this3._setContentStyle(_this3.state.layoutWidth);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state2 = this.state,\n          paddingTop = _this$state2.paddingTop,\n          paddingBottom = _this$state2.paddingBottom,\n          paddingLeft = _this$state2.paddingLeft,\n          paddingRight = _this$state2.paddingRight;\n      var _this$props = this.props,\n          _this$props$contentSt = _this$props.contentStyle,\n          contentStyle = _this$props$contentSt === void 0 ? {} : _this$props$contentSt,\n          _this$props$style = _this$props.style,\n          style = _this$props$style === void 0 ? {} : _this$props$style,\n          _this$props$itemCover = _this$props.itemCoverStyle,\n          itemCoverStyle = _this$props$itemCover === void 0 ? {} : _this$props$itemCover,\n          _this$props$lockItemC = _this$props.lockItemCoverStyle,\n          lockItemCoverStyle = _this$props$lockItemC === void 0 ? {} : _this$props$lockItemC,\n          _this$props$headerCom = _this$props.headerComponent,\n          headerComponent = _this$props$headerCom === void 0 ? function () {\n        return null;\n      } : _this$props$headerCom,\n          _this$props$footerCom = _this$props.footerComponent,\n          footerComponent = _this$props$footerCom === void 0 ? function () {\n        return null;\n      } : _this$props$footerCom;\n      var allData = [].concat(_toConsumableArray(this.state.data), _toConsumableArray(this.state.lockData));\n      return React.createElement(ScrollView, {\n        style: [styles.fullWidth, style],\n        onLayout: this._containerOnLayout,\n        scrollEnabled: this.state.scrollable,\n        showsVerticalScrollIndicator: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 7\n        }\n      }, headerComponent(), React.createElement(View, {\n        style: [{\n          paddingTop: paddingTop,\n          paddingBottom: paddingBottom,\n          paddingLeft: paddingLeft,\n          paddingRight: paddingRight\n        }, this.state.contentStyle, contentStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 9\n        }\n      }, this.positions && this.positions.length === allData.length && this.state.data.map(function (item, index) {\n        var selectStyle = _this4.state.selectIndex === index ? _this4.state.selectStyle : {};\n\n        var content = _this4.props.renderItem(item, index);\n\n        var customTap = content.props.onTap ? content.props.onTap : function () {};\n        var key = content.props.uniqueKey || index;\n\n        if (!_this4[\"moveAnimate\" + key] || _this4.moveAnimate) {\n          _this4[\"moveAnimate\" + key] = new Animated.ValueXY(_this4.positions[index]);\n          _this4.animateArray[index] = _this4[\"moveAnimate\" + key];\n\n          if (_this4.state.data.length - 1 === index) {\n            _this4.moveAnimate = false;\n          }\n        }\n\n        return [React.createElement(Animated.View, _extends({}, _this4.panResponder.panHandlers, {\n          key: \"sortableView\" + key,\n          style: [styles.absolute, _objectSpread(_objectSpread({\n            elevation: _this4.state.selectIndex === index ? 10 : 1,\n            height: _this4.state.perHeight,\n            width: _this4.state.perWidth,\n            zIndex: _this4.state.selectIndex === index ? 10 : 1\n          }, selectStyle), _this4._getAnimation(key)), _this4[\"moveAnimate\" + key].getLayout()],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 17\n          }\n        }), React.createElement(TouchableWithoutFeedback, {\n          style: styles.flex,\n          onLongPress: _this4._onLongPressItems(key, index),\n          onPress: function onPress() {\n            customTap(item, index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 19\n          }\n        }, React.createElement(View, {\n          style: styles.fullScreen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 21\n          }\n        }, content))), _this4.props.renderItemCover && React.createElement(Animated.View, {\n          key: \"sortableViewItemCover\" + key,\n          style: [styles.absolute, itemCoverStyle, _objectSpread({\n            elevation: _this4.state.selectIndex === index ? 10 : 1,\n            zIndex: _this4.state.selectIndex === index ? 10 : 1\n          }, _this4._getAnimation(key)), _this4[\"moveAnimate\" + key].getLayout()],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 19\n          }\n        }, _this4.props.renderItemCover(item, index))];\n      }), this.state.lockData.length > 0 && this.positions && this.positions.length === allData.length && this.state.lockData.map(function (item, index) {\n        if (!_this4.props.renderLockItem) {\n          return null;\n        }\n\n        var content = _this4.props.renderLockItem(item, index);\n\n        var customTap = content.props.onTap ? content.props.onTap : function () {};\n        var key = content.props.uniqueKey || index;\n        var x = _this4.positions[_this4.state.data.length + index].x;\n        var y = _this4.positions[_this4.state.data.length + index].y;\n        return [React.createElement(Animated.View, {\n          key: \"sortableView\" + key,\n          style: [styles.absolute, {\n            height: _this4.state.perHeight,\n            width: _this4.state.perWidth\n          }, {\n            left: x,\n            top: y\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 17\n          }\n        }, React.createElement(TouchableWithoutFeedback, {\n          style: styles.flex,\n          onPress: function onPress() {\n            customTap(item, index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 19\n          }\n        }, React.createElement(View, {\n          style: styles.fullScreen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 21\n          }\n        }, content))), _this4.props.renderLockItemCover && React.createElement(Animated.View, {\n          key: \"sortableViewItemCover\" + key,\n          style: [styles.absolute, {\n            zIndex: _this4.state.selectIndex === index ? 10 : 1\n          }, lockItemCoverStyle, {\n            left: x,\n            top: y\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 19\n          }\n        }, _this4.props.renderLockItemCover(item, index))];\n      })), footerComponent());\n    }\n  }]);\n\n  return SortableGridview;\n}(Component);\n\nexport { SortableGridview as default };\nvar styles = StyleSheet.create({\n  fullWidth: {\n    width: '100%',\n    overflow: 'hidden'\n  },\n  absolute: {\n    position: 'absolute'\n  },\n  flex: {\n    flex: 1\n  },\n  fullScreen: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0\n  }\n});","map":{"version":3,"sources":["C:/Users/josh2/Documents/React_Native_Projects/Soundboard/node_modules/react-native-sortable-gridview/index.js"],"names":["React","Component","isEqual","numPerRow","aspectRatio","gapWidth","paddingVertical","paddingHorizontal","sensitivity","selectAnimation","selectStyle","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","SortableGridview","state","useScrollView","props","scrollable","containerOnMount","contentStyle","selectIndex","perWidth","perHeight","layoutWidth","data","lockData","paddingTop","paddingBottom","paddingLeft","paddingRight","customAnimation","startTimingOption","toValue","duration","easing","Easing","ease","endTimingOption","setTimer","dx","dy","timer","setTimeout","_caluIndex","clearTimer","clearTimeout","onActiveBlockIsSet","fn","evt","gestureState","currentAnchor","onStartDrag","tempX","positions","positionIndex","x","tempY","y","onMoveBlock","vx","vy","setValue","Math","abs","onReleaseBlock","Animated","parallel","timing","currentAnchorKey","start","setState","onDragRelease","caluing","panCapture","centerX","centerY","columNum","floor","rowNum","rowCount","index","length","newIndex","rangeMax","rangeMin","moveItem","splice","animate","animateArray","map","item","push","_setContentStyle","allData","ceil","contentHeight","row","column","flexDirection","flexWrap","zIndex","position","_getAnimation","key","Value","style","onSelectScaleAnimation","scale","interpolate","inputRange","outputRange","transform","onSelectShakeAnimation","rotate","rotateZ","_onLongPressItems","onDragStart","_containerOnLayout","nativeEvent","layout","currentAnchorAnimation","panResponder","PanResponder","create","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onShouldBlockNativeResponder","onPanResponderTerminationRequest","onPanResponderGrant","onPanResponderMove","onPanResponderRelease","nextProps","preDataLength","nextData","moveAnimate","itemCoverStyle","lockItemCoverStyle","headerComponent","footerComponent","styles","fullWidth","content","renderItem","customTap","onTap","uniqueKey","ValueXY","panHandlers","absolute","getLayout","flex","fullScreen","renderItemCover","renderLockItem","left","top","renderLockItemCover","StyleSheet","overflow","bottom","right"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n  StyleSheet,\n  View,\n  ScrollView,\n  Platform,\n  Animated,\n  PanResponder,\n  TouchableWithoutFeedback,\n  Easing,\n} from 'react-native'\nimport isEqual from 'react-fast-compare'\n\nconst numPerRow = 3;\nconst aspectRatio = 1;\nconst gapWidth = 16;\nconst paddingVertical = 16;\nconst paddingHorizontal = 16;\nconst sensitivity = 150;\nconst selectAnimation = 'scale'; // scale, shake\nconst selectStyle = {\n  shadowColor: '#000',\n  shadowOffset: {\n    width: 0,\n    height: 0,\n  },\n  shadowOpacity: 0.25,\n  shadowRadius: 3.84,\n\n  elevation: 5,\n}\n\nexport default class SortableGridview extends Component {\n  state = {\n    useScrollView: this.props.useScrollView || false,\n    scrollable: this.props.useScrollView || false,\n    containerOnMount: false,\n    contentStyle: {},\n    selectIndex: null,\n\n    perWidth: 0,\n    perHeight: 0,\n    layoutWidth: 0,\n\n    data: this.props.data || [],\n    lockData: this.props.lockData || [],\n    numPerRow: this.props.numPerRow || numPerRow,\n    aspectRatio: this.props.aspectRatio || aspectRatio, // (height / width)\n    gapWidth: this.props.gapWidth || gapWidth,\n    // paddingVertical: this.props.paddingVertical || paddingVertical,\n    // paddingHorizontal: this.props.paddingHorizontal || paddingHorizontal,\n    paddingTop: this.props.paddingTop || paddingVertical,\n    paddingBottom: this.props.paddingBottom || paddingVertical,\n    paddingLeft: this.props.paddingLeft || paddingHorizontal,\n    paddingRight: this.props.paddingRight || paddingHorizontal,\n    selectStyle: this.props.selectStyle || selectStyle,\n    sensitivity: this.props.sensitivity || sensitivity,\n    selectAnimation: this.props.selectAnimation || selectAnimation, // scale/shake\n    customAnimation: this.props.customAnimation ? {\n      startTimingOption: {\n        toValue: 1,\n        duration: 300,\n        easing: Easing.ease,\n      },\n      endTimingOption: {\n        toValue: 0,\n        duration: 150,\n        // useNativeDriver: true,\n      },\n      ...this.props.customAnimation,\n    } : {\n      startTimingOption: {\n        toValue: 1,\n        duration: 300,\n        easing: Easing.ease,\n        // useNativeDriver: true,\n      },\n      endTimingOption: {\n        toValue: 0,\n        duration: 150,\n        // useNativeDriver: true,\n      },\n    }\n  }\n  componentWillMount() {\n    this.data = [...this.state.data];\n    this.currentAnchor;\n    this.currentAnchorAnimation;\n    this.positions = [];\n    this.animateArray = [];\n    this.panCapture = false;\n    this.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: (evt, gestureState) => true,\n      onStartShouldSetPanResponderCapture: (evt, gestureState) => false,\n      onMoveShouldSetPanResponder: (evt, gestureState) => this.panCapture,\n      onMoveShouldSetPanResponderCapture: (evt, gestureState) =>\n        this.panCapture,\n      onShouldBlockNativeResponder: (evt, gestureState) => false,\n      onPanResponderTerminationRequest: (evt, gestureState) => false,\n      onPanResponderGrant: this.onActiveBlockIsSet(this.onStartDrag),\n      onPanResponderMove: this.onActiveBlockIsSet(this.onMoveBlock),\n      onPanResponderRelease: this.onActiveBlockIsSet(this.onReleaseBlock)\n      // onPanResponderGrant: this.onStartDrag,\n      // onPanResponderMove: this.onMoveBlock,\n      // onPanResponderRelease: this.onReleaseBlock,\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (\n      !isEqual(this.props.data, nextProps.data) ||\n      nextProps.numPerRow !== this.props.numPerRow ||\n      nextProps.aspectRatio !== this.props.aspectRatio ||\n      nextProps.gapWidth !== this.props.gapWidth ||\n      nextProps.paddingTop !== this.props.paddingTop ||\n      nextProps.paddingBottom !== this.props.paddingBottom ||\n      nextProps.paddingLeft !== this.props.paddingLeft ||\n      nextProps.paddingRight !== this.props.paddingRight ||\n      nextProps.selectStyle !== this.props.selectStyle ||\n      nextProps.sensitivity !== this.props.sensitivity\n    ) {\n      const preDataLength = this.props.data.length;\n      const nextData = [...nextProps.data];\n      let data = []\n      if (preDataLength > nextData.length) {\n        this.moveAnimate = true;\n        data = nextData;\n      } else {\n        nextData.splice(0, preDataLength);\n        data = [...this.state.data, ...nextData];\n      }\n\n      this.data = data;\n      \n      this.setState({\n        ...this.state,\n        data,\n        lockData: nextProps.lockData || this.state.lockData,\n        numPerRow: nextProps.numPerRow || this.state.numPerRow,\n        aspectRatio: nextProps.aspectRatio || this.state.aspectRatio,\n        gapWidth: nextProps.gapWidth || this.state.gapWidth,\n        paddingTop: nextProps.paddingTop || this.state.paddingTop,\n        paddingBottom: nextProps.paddingBottom || this.state.paddingBottom,\n        paddingLeft: nextProps.paddingLeft || this.state.paddingLeft,\n        paddingRight: nextProps.paddingRight || this.state.paddingRight,\n        selectStyle: nextProps.selectStyle || this.state.selectStyle,\n        sensitivity: nextProps.sensitivity || this.state.sensitivity,\n      }, () => {\n        this._setContentStyle(this.state.layoutWidth);\n      });\n    }\n    \n  }\n\n  setTimer = (dx, dy) => {\n    this.timer = setTimeout(() => {\n      this._caluIndex(dx, dy);\n    }, this.state.sensitivity);\n      \n  }\n\n  clearTimer = () => {\n    clearTimeout(this.timer);\n  }\n\n  onActiveBlockIsSet = fn => (evt, gestureState) => {\n    this.currentAnchor && fn(evt, gestureState);\n  };\n\n  onStartDrag = (evt, gestureState) => {\n    // if (!this.currentAnchor) {\n    //   return;\n    // }\n    // this.state.useScrollView && this.setState({\n    //   scrollable: false,\n    // });\n    this.tempX = this.positions[this.positionIndex].x\n    this.tempY = this.positions[this.positionIndex].y\n  };\n\n  onMoveBlock = (evt, gestureState) => {\n    // this.clearTimer();\n    const { dx, dy, vx, vy } = gestureState;\n    this[this.currentAnchor].setValue({ x: dx + this.tempX, y: dy + this.tempY})\n    if (Math.abs(vx) < 0.2 && Math.abs(vy) < 0.2) {\n      return;\n    }\n    \n    this._caluIndex(dx + this.tempX, dy + this.tempY);\n    // this.setTimer(dx + this.tempX, dy + this.tempY);\n  }\n\n  onReleaseBlock = (evt, gestureState) => {\n    // this.clearTimer();\n    // const { dx, dy, moveX, moveY, vx, vy , x0, y0 } = gestureState;\n\n    Animated.parallel([\n      Animated.timing(\n        this[this.currentAnchor], // The value to drive\n        {\n          toValue: {\n            x: this.positions[this.positionIndex].x,\n            y: this.positions[this.positionIndex].y,\n          },\n          duration: 150,\n        },\n      ),\n      Animated.timing(\n        this[`selectAnimation${this.currentAnchorKey}`], // The value to drive\n        this.state.customAnimation.endTimingOption,\n      ),\n    ]).start((data) => {\n      this.setState({\n        data: this.data,\n        selectIndex: null,\n        scrollable: this.state.useScrollView || false,\n      }, () => {\n        this.props.onDragRelease && this.props.onDragRelease(this.data);\n        this.positionIndex = null;\n        this.currentAnchor = null;\n        this.caluing = false;\n        this.panCapture = false;\n      });\n      \n    });\n  };\n\n  _caluIndex = (x, y) => {\n    if (this.caluing) {\n      return;\n    }\n    this.caluing = true;\n    this.data = this.data || [...this.state.data];\n    let centerX = (x + this.state.perWidth / 2);\n    let centerY = (y + this.state.perHeight / 2);\n    let columNum = Math.floor(centerX / (this.state.perWidth + this.state.gapWidth));\n    let rowNum = Math.floor(centerY / (this.state.perHeight + this.state.gapWidth));\n    if (rowNum > this.state.rowCount) {\n      rowNum = this.state.rowCount\n    } else if (rowNum < 0) {\n      rowNum = 0;\n    }\n    if (columNum > this.state.numPerRow) {\n      columNum = this.state.numPerRow;\n    } else if (columNum < 0) {\n      columNum = 0;\n    }\n    let index = columNum + rowNum * this.state.numPerRow;\n    index = (index > this.state.data.length - 1) ? this.state.data.length - 1 : index\n    if (this.positionIndex === index) {\n      this.caluing = false;\n      return;\n    }\n    let newIndex;\n    let rangeMax;\n    let rangeMin;\n    if (index === this.positionIndex) {\n      newIndex = index;\n      rangeMax = index;\n      rangeMin = index;\n    } else if (index > this.positionIndex) {\n      const moveItem = this.data.splice(this.positionIndex, 1);\n      const animate = this.animateArray.splice(this.positionIndex, 1)[0];\n      this.data.splice(index, 0, moveItem[0]);\n      this.animateArray.splice(index, 0, animate);\n      newIndex = index;\n      rangeMax = index;\n      rangeMin = this.positionIndex;\n    } else if (index < this.positionIndex) {\n      const moveItem = this.data.splice(this.positionIndex, 1);\n      const animate = this.animateArray.splice(this.positionIndex, 1)[0];\n      this.data.splice(index, 0, moveItem[0]);\n      this.animateArray.splice(index, 0, animate);\n      newIndex = index ;\n      rangeMax = this.positionIndex;\n      rangeMin = index;\n    }\n    const parallel = [];\n    this.animateArray.map((item, index) => {\n      if (index > rangeMax || index < rangeMin) {\n        return;\n      }\n      if (newIndex === index || !this.positions[index]) {\n        return;\n      }\n      parallel.push(\n        Animated.timing(\n          item, // The value to drive\n          {\n            toValue: {\n              x: this.positions[index].x,\n              y: this.positions[index].y,\n            },\n            duration: 150,\n          },\n        )\n      )\n      \n    })\n    this.positionIndex = index;\n\n    Animated.parallel(parallel).start(() => {\n      this.caluing = false;\n    });\n    \n  }\n\n  _setContentStyle = (width) => {\n    const { data = [], lockData =[], numPerRow, gapWidth, aspectRatio, paddingLeft, paddingRight, paddingTop, paddingBottom } = this.state\n    const allData = [...data, ...lockData];\n    const rowCount  = Math.ceil(allData.length / numPerRow);\n    const perWidth = (width - ((numPerRow - 1) * gapWidth) - (paddingLeft + paddingRight)) / numPerRow;\n    const perHeight = perWidth * aspectRatio;\n    const contentHeight = (perHeight * rowCount) + (rowCount - 1) * gapWidth;\n    if (this.positions.length !== allData.length) {\n      this.positions = [];\n      allData.map((item, index) => {\n        const row = Math.floor(index / numPerRow);\n        const column = index % numPerRow;\n        this.positions[index] = {\n          x: paddingLeft + perWidth * column + column * gapWidth,\n          y: paddingTop+ perHeight * row + row * gapWidth,\n        }\n      });\n    }\n\n    this.setState({\n      containerOnMount: true,\n      perWidth,\n      perHeight,\n      layoutWidth: width,\n      rowCount: rowCount - 1,\n      contentStyle: {\n        height: contentHeight + (paddingTop + paddingBottom),\n        width: '100%',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        zIndex: 2,\n        elevation: 2,\n        position: 'relative'\n        // overflow: 'hidden',\n      },\n    });\n  }\n\n  _getAnimation = (key) => {\n    if (this.state.selectAnimation === 'none') {\n      return {};\n    }\n    \n    if (!this[`selectAnimation${key}`]) {\n      this[`selectAnimation${key}`] = new Animated.Value(0);\n    }\n    if (this.state.customAnimation && this.state.customAnimation.style) {\n      return this.state.customAnimation.style(this[`selectAnimation${key}`]);\n    }\n    if (this.state.selectAnimation === 'scale') {\n      let onSelectScaleAnimation = {}\n      let scale = this[`selectAnimation${key}`].interpolate({\n        inputRange: [0, .6, 1],\n        outputRange: [1, 1.1, 1.07],\n      });\n      onSelectScaleAnimation = {\n        transform: [{\n          scale: scale,\n        }],\n      }\n      return onSelectScaleAnimation;\n    }\n    if (this.state.selectAnimation === 'shake') {\n      let onSelectShakeAnimation = {}\n      let rotate = this[`selectAnimation${key}`].interpolate({\n        inputRange: [0, .25, .5, .75, 1],\n        outputRange: ['0deg', '-5deg', '5deg', '-5deg', '0deg'],\n      });\n      onSelectShakeAnimation = {\n        transform: [{\n          rotateZ: rotate,\n        }],\n      }\n      return onSelectShakeAnimation;\n    }\n  }\n\n  _onLongPressItems = (key, index) => {\n    return () => {\n      this.setState({\n        selectIndex: index,\n        scrollable: false,\n      })\n      this.positionIndex = index;\n      this.currentAnchor = `moveAnimate${key}`;\n      this.currentAnchorKey = key\n      this.props.onDragStart && this.props.onDragStart(false);\n      this.panCapture = true;\n      Animated.timing(\n        this[`selectAnimation${this.currentAnchorKey}`],\n        this.state.customAnimation.startTimingOption,\n      ).start();\n    }\n    \n  }\n\n  _containerOnLayout = ({nativeEvent}) => {\n    this._setContentStyle(nativeEvent.layout.width);\n  }\n\n  render() {\n    const { paddingTop, paddingBottom, paddingLeft, paddingRight } = this.state;\n    const { contentStyle = {}, style = {}, itemCoverStyle = {}, lockItemCoverStyle = {}, headerComponent = () => {return null;}, footerComponent = () => {return null;} } = this.props;\n    const allData = [...this.state.data, ...this.state.lockData];\n    return (\n      <ScrollView style={[styles.fullWidth, style]} onLayout={this._containerOnLayout} scrollEnabled={this.state.scrollable} showsVerticalScrollIndicator={false}>\n        {headerComponent()}\n        <View style={[{paddingTop, paddingBottom, paddingLeft, paddingRight}, this.state.contentStyle, contentStyle]}>\n          {this.positions && this.positions.length === allData.length &&\n            this.state.data.map((item, index) => {\n              const selectStyle = this.state.selectIndex === index ? this.state.selectStyle : {}\n              const content = this.props.renderItem(item, index);\n              const customTap = content.props.onTap ? content.props.onTap : () => {};\n              const key = content.props.uniqueKey || index;\n              \n              if (!this[`moveAnimate${key}`] || this.moveAnimate) {\n                this[`moveAnimate${key}`] = new Animated.ValueXY(this.positions[index]);\n                this.animateArray[index] = this[`moveAnimate${key}`]\n                if (this.state.data.length - 1 === index) {\n                  this.moveAnimate = false;\n                }\n              }\n              return [\n                <Animated.View\n                  {...this.panResponder.panHandlers}\n                  key={`sortableView${key}`}\n                  style={[\n                    styles.absolute,\n                    {elevation: this.state.selectIndex === index ? 10 : 1, height: this.state.perHeight, width: this.state.perWidth, zIndex: this.state.selectIndex === index ? 10 : 1, ...selectStyle, ...this._getAnimation(key)},\n                    // {left: this[`moveAnimate${key}`].x, top: this[`moveAnimate${key}`].y}\n                    this[`moveAnimate${key}`].getLayout(),\n                  ]}\n                >\n                  <TouchableWithoutFeedback style={styles.flex}\n                    // delayLongPress={1000}\n                    onLongPress={this._onLongPressItems(key, index)}\n                    onPress={() => {\n                      customTap(item, index);\n                    }}\n                  >\n                    <View style={styles.fullScreen}>\n                      {content}\n                    </View>\n                  </TouchableWithoutFeedback>\n                </Animated.View>,\n                this.props.renderItemCover && (\n                  <Animated.View\n                    key={`sortableViewItemCover${key}`}\n                    style={[\n                      styles.absolute,\n                      itemCoverStyle,\n                      {elevation: this.state.selectIndex === index ? 10 : 1, zIndex: this.state.selectIndex === index ? 10 : 1, ...this._getAnimation(key)},\n                      // {left: this[`moveAnimate${key}`].x, top: this[`moveAnimate${key}`].y}\n                      this[`moveAnimate${key}`].getLayout(),\n                    ]}\n                  >\n                    {this.props.renderItemCover(item, index)}\n                  </Animated.View>\n                ),\n              ]\n            })\n          }\n          {this.state.lockData.length > 0 && this.positions && this.positions.length === allData.length &&\n            this.state.lockData.map((item, index) => {\n              if (!this.props.renderLockItem) {\n                return null;\n              }\n              const content = this.props.renderLockItem(item, index);\n              const customTap = content.props.onTap ? content.props.onTap : () => {};\n              const key = content.props.uniqueKey || index;\n              const x = this.positions[this.state.data.length + index].x;\n              const y = this.positions[this.state.data.length + index].y;\n              return [\n                <Animated.View\n                  key={`sortableView${key}`}\n                  style={[\n                    styles.absolute,\n                    {height: this.state.perHeight, width: this.state.perWidth},\n                    {left: x, top: y}\n                  ]}\n                >\n                  <TouchableWithoutFeedback\n                    style={styles.flex}\n                    onPress={() => {\n                      customTap(item, index);\n                    }}\n                  >\n                    <View style={styles.fullScreen}>\n                      {content}\n                    </View>\n                  </TouchableWithoutFeedback>\n                </Animated.View>,\n                this.props.renderLockItemCover && (\n                  <Animated.View\n                    key={`sortableViewItemCover${key}`}\n                    style={[\n                      styles.absolute,\n                      {zIndex: this.state.selectIndex === index ? 10 : 1},\n                      lockItemCoverStyle,\n                      {left: x, top: y}\n                    ]}\n                  >\n                    {this.props.renderLockItemCover(item, index)}\n                  </Animated.View>\n                ),\n              ]\n            })\n          }\n        </View>\n        {footerComponent()}\n        \n      </ScrollView>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  fullWidth: {\n    width: '100%',\n    overflow: 'hidden',\n    // overflow: 'scroll',\n    // backgroundColor: 'red',\n    // height: 300,\n  },\n  absolute: {\n    position: 'absolute',\n  },\n  flex: {\n    flex: 1,\n  },\n  fullScreen: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}