{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\josh2\\\\Documents\\\\React_Native_Projects\\\\Soundboard\\\\src\\\\screens\\\\HomeScreen.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { playSound } from \"../apis/audio_api\";\nimport SortableGridView from \"react-native-sortable-gridview\";\nimport { SimpleLineIcons } from '@expo/vector-icons';\n\nfunction HomeScreen() {\n  var _useState = useState([{\n    name: \"Bark\",\n    backgroundColor: \"#09f\",\n    color: \"#fff\"\n  }, {\n    name: \"Meow\",\n    backgroundColor: \"#f60\",\n    color: \"#fff\"\n  }, {\n    name: \"Bleat\",\n    backgroundColor: \"#333\",\n    color: \"#fff\"\n  }, {\n    name: \"Recording\",\n    backgroundColor: \"#rgba(255, 216, 58, 1)\",\n    color: \"#333\"\n  }]),\n      _useState2 = _slicedToArray(_useState, 2),\n      sounds = _useState2[0],\n      setSounds = _useState2[1];\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(SortableGridView, {\n    data: sounds,\n    lockData: [{\n      name: 'lock box1'\n    }, {\n      name: 'lock box2'\n    }, {\n      name: 'lock box3'\n    }, {\n      name: 'lock box4'\n    }],\n    sensitivity: 150,\n    onDragStart: function onDragStart() {\n      console.log(\"Default onDragStart\");\n    },\n    onDragRelease: function onDragRelease(data) {},\n    renderItem: function renderItem(item, index) {\n      return React.createElement(View, {\n        uniqueKey: item.name,\n        onTap: function onTap() {\n          return playSound(item.name.toLowerCase());\n        },\n        style: [styles.item, {\n          backgroundColor: item.backgroundColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: [styles.text, {\n          color: item.color\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, item.name));\n    },\n    itemCoverStyle: {\n      marginTop: 5,\n      marginLeft: 5\n    },\n    renderItemCover: function renderItemCover(item, index) {\n      return React.createElement(TouchableOpacity, {\n        style: styles.cover,\n        onPress: function onPress() {\n          var data = _toConsumableArray(sounds);\n\n          data.splice(index, 1);\n          setSounds(data);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, React.createElement(SimpleLineIcons, {\n        name: \"trash\",\n        size: 24,\n        color: \"gray\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }));\n    },\n    renderLockItem: function renderLockItem(item, index) {\n      return React.createElement(View, {\n        uniqueKey: \"\" + item.name,\n        style: styles.lockItem,\n        onTap: function onTap() {\n          Alert.alert(\"On Tap \" + item.name + \"!\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, item.name));\n    },\n    lockItemCoverStyle: {\n      marginTop: -8,\n      marginLeft: -8\n    },\n    renderLockItemCover: function renderLockItemCover(item, index) {\n      return React.createElement(TouchableOpacity, {\n        style: styles.cover,\n        onPress: function onPress() {\n          Alert.alert(\"On Press \" + item.name + \" Cover!\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: item.backgroundColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, item.name, \" cover\"));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  item: {\n    flex: 1,\n    borderRadius: 4,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  cover: {\n    backgroundColor: \"transparent\"\n  },\n  lockItem: {\n    flex: 1\n  }\n});\nexport default HomeScreen;","map":{"version":3,"sources":["C:/Users/josh2/Documents/React_Native_Projects/Soundboard/src/screens/HomeScreen.js"],"names":["React","useState","playSound","SortableGridView","SimpleLineIcons","HomeScreen","name","backgroundColor","color","sounds","setSounds","console","log","data","item","index","toLowerCase","styles","text","marginTop","marginLeft","cover","splice","lockItem","Alert","alert","StyleSheet","create","flex","borderRadius","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport { View, Text, StyleSheet, Alert, TouchableOpacity } from \"react-native\";\r\nimport { playSound } from \"../apis/audio_api\";\r\nimport SortableGridView from \"react-native-sortable-gridview\";\r\nimport { SimpleLineIcons } from '@expo/vector-icons';\r\n\r\n\r\n\r\nfunction HomeScreen() {\r\n  const [sounds, setSounds] = useState([\r\n    { name: \"Bark\", backgroundColor: \"#09f\", color: \"#fff\" },\r\n        { name: \"Meow\", backgroundColor: \"#f60\", color: \"#fff\" },\r\n        { name: \"Bleat\", backgroundColor: \"#333\", color: \"#fff\" },\r\n        {\r\n          name: \"Recording\",\r\n          backgroundColor: \"#rgba(255, 216, 58, 1)\",\r\n          color: \"#333\",\r\n        },\r\n  ]);\r\n\r\n\r\n  return (\r\n    <View>\r\n      <SortableGridView\r\n      data={sounds}\r\n      lockData={[\r\n        {name: 'lock box1'},\r\n        {name: 'lock box2'},\r\n        {name: 'lock box3'},\r\n        {name: 'lock box4'},\r\n      ]}\r\n      sensitivity={150} \r\n      onDragStart={() => {\r\n        console.log(\"Default onDragStart\");\r\n      }}\r\n      onDragRelease={(data) => {\r\n        //console.log(\"Default onDragRelease\", data);\r\n        //setSounds(sounds);\r\n      }}\r\n      renderItem={(item, index) => {\r\n        return (\r\n          <View\r\n            uniqueKey={item.name} // Important! Should add this props!!!\r\n            onTap={() => playSound(item.name.toLowerCase())}\r\n            style={[styles.item, { backgroundColor: item.backgroundColor }]}\r\n          >\r\n            <Text style={[styles.text, { color: item.color }]}>\r\n              {item.name}\r\n            </Text>\r\n          </View>\r\n        );\r\n      }}\r\n\r\n      itemCoverStyle={{marginTop: 5, marginLeft: 5}}\r\n      renderItemCover={(item, index) => {\r\n        return (\r\n          <TouchableOpacity\r\n            style={styles.cover}\r\n            onPress={() => {\r\n              let data = [...sounds];\r\n              data.splice(index, 1);\r\n              setSounds(data);\r\n            }}\r\n          >\r\n            <SimpleLineIcons name=\"trash\" size={24} color=\"gray\" />\r\n          </TouchableOpacity>\r\n        )\r\n      }}\r\n\r\n      renderLockItem={(item, index) => {\r\n        return (\r\n          <View\r\n            uniqueKey={`${item.name}`}\r\n            style={styles.lockItem}\r\n            onTap={() => {\r\n              Alert.alert(`On Tap ${item.name}!`);\r\n            }}\r\n          >\r\n            <Text>{item.name}</Text>\r\n          </View>\r\n        )\r\n      }}\r\n      lockItemCoverStyle={{marginTop: -8, marginLeft: -8}}\r\n      renderLockItemCover={(item, index) => {\r\n        return (\r\n          <TouchableOpacity\r\n            style={styles.cover}\r\n            onPress={() => {\r\n              Alert.alert(`On Press ${item.name} Cover!`);\r\n            }}\r\n          >\r\n            <Text style={{color: item.backgroundColor}}>{item.name} cover</Text>\r\n          </TouchableOpacity>\r\n        )\r\n      }}\r\n    />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  item: {\r\n    flex: 1,\r\n    borderRadius: 4,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  cover: {\r\n    backgroundColor: \"transparent\",\r\n  },\r\n  lockItem: {\r\n    flex: 1,\r\n  }\r\n});\r\n\r\nexport default HomeScreen;\r\n"]},"metadata":{},"sourceType":"module"}